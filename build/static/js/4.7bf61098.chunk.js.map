{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsPageView.js"],"names":["module","exports","ContactForm","useAddContactMutation","addContact","contacts","useGetContactsQuery","data","onSubmit","e","preventDefault","name","currentTarget","value","phone","newContact","find","contact","toLowerCase","alert","reset","className","s","elem","type","placeholder","pattern","title","required","ContactList","useDeleteContactMutation","deleteContact","map","onClick","id","Filter","onChange","ContactsView","useState","filter","setFilter","Container","includes","trim"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,4B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,6B,oBCA3DD,EAAOC,QAAU,CAAC,KAAO,uB,qFC0DVC,MArDf,WACE,MAAqBC,cAAdC,EAAP,oBACcC,EAAaC,cAAnBC,KAuBN,OACI,mCACI,uBAAMC,SAvBM,SAACC,GACrBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAAcD,KAAKE,MAC5BC,EAAQL,EAAEG,cAAcE,MAAMD,MAC9BE,EAAa,CACjBJ,OACAG,SAEF,GACET,EAASW,MACP,SAACC,GAAD,OAAaN,EAAKO,gBAAkBD,EAAQN,KAAKO,iBAKnD,OAFAC,MAAM,kCACNV,EAAEG,cAAcQ,QAGlBhB,EAAWW,GACXN,EAAEG,cAAcQ,SAKuBC,UAAWC,IAAEC,KAA5C,UACI,gCACA,uBACAC,KAAK,OACLb,KAAK,OACLc,YAAY,aACZC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,MAGZ,gCACI,uBACAJ,KAAK,MACLb,KAAK,QACLc,YAAY,eACZC,QAAQ,qCACRC,MAAM,4PACNC,UAAQ,MAGZ,wBAAQJ,KAAK,SAAb,wB,kBCjCGK,MAjBf,YAAoC,IAAbxB,EAAY,EAAZA,SACrB,EAAwByB,cAAjBC,EAAP,oBACA,OACE,oBAAIV,UAAWC,IAAEC,KAAjB,SACGlB,EAAS2B,KAAI,SAACf,GAAD,OACZ,+BACE,uCAAUA,EAAQN,QAClB,yCAAYM,EAAQH,SACpB,wBAAQU,KAAK,SAASS,QAAS,kBAAMF,EAAcd,EAAQiB,KAA3D,sBAHOjB,EAAQiB,U,0BCOVC,MAdf,YAAsC,IAApBtB,EAAmB,EAAnBA,MAAOuB,EAAY,EAAZA,SACvB,OACE,uBAAOf,UAAWC,IAAEC,KAApB,SACA,uBACEC,KAAK,OACLb,KAAK,SACLc,YAAY,+BACZZ,MAAOA,EACPuB,SAAUA,O,OCqBDC,UAxBf,WACE,IAAQ9B,EAASD,YAAoB,IAA7BC,KAER,EAA4B+B,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAYA,OACE,eAACC,EAAA,EAAD,WACGlC,GAAQ,cAAC,EAAD,CAAaF,SAAUE,IAChC,cAAC,EAAD,CAAQM,MAAO0B,EAAQH,SAbN,SAAC3B,GACpB+B,EAAU/B,EAAEG,cAAcC,UAavBN,GAAQ,cAAC,EAAD,CAAaF,SATjBE,EAAKgC,QAAO,SAACtB,GAAD,OACjBA,EAAQN,KAAKO,cAAcwB,SAASH,EAAOI,OAAOzB","file":"static/js/4.7bf61098.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"elem\":\"ContactForm_elem__pzNgu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"elem\":\"ContactList_elem__wJ5N_\",\"title\":\"ContactList_title__dgPsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"elem\":\"Filter_elem__2uepw\"};","import s from './ContactForm.module.css';\r\nimport {\r\n  useAddContactMutation,\r\n  useGetContactsQuery,\r\n} from \"../../redux/contact/api\";\r\n\r\nfunction ContactForm() {\r\n  const [addContact] = useAddContactMutation();\r\n  const { data: contacts } = useGetContactsQuery();\r\n\r\n  const handleSubmite = (e) => {\r\n    e.preventDefault();\r\n    const name = e.currentTarget.name.value;\r\n    const phone = e.currentTarget.phone.value;\r\n    const newContact = {\r\n      name,\r\n      phone,\r\n    };\r\n    if (\r\n      contacts.find(\r\n        (contact) => name.toLowerCase() === contact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert('Contact is already in use');\r\n      e.currentTarget.reset();\r\n      return;\r\n    } \r\n    addContact(newContact);\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmite} className={s.elem}>\r\n                <label>\r\n                <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Enter name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                />\r\n            </label>\r\n            <label>\r\n                <input\r\n                type=\"tel\"\r\n                name=\"phone\"\r\n                placeholder=\"Enter number\"\r\n                pattern=\"38[0-9]{3}[0-9]{3}[0-9]{2}[0-9]{2}\"\r\n                title=\"Номер может состоять только из цифр. Например 380956665557.\"\r\n                required\r\n                />\r\n            </label>\r\n            <button type=\"submit\">Save</button>\r\n        </form> \r\n        </>\r\n    )\r\n}\r\nexport default ContactForm;","import s from './ContactList.module.css'\r\n\r\nimport { useDeleteContactMutation } from \"../../redux/contact/api\";\r\n\r\nfunction ContactList({ contacts }) {\r\n  const [deleteContact] = useDeleteContactMutation();\r\n  return (\r\n    <ul className={s.elem}>\r\n      {contacts.map((contact) => (\r\n        <li key={contact.id}>\r\n          <p>Name: {contact.name}</p>\r\n          <p>Number: {contact.phone}</p>\r\n          <button type=\"button\" onClick={() => deleteContact(contact.id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import s from './Filter.module.css'\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.elem}>\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      placeholder=\"Enter name to search contact\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import ContactForm from \"../components/ContactForm/ContactForm.js\";\r\nimport ContactList from \"../components/ContactList/ContactList\";\r\nimport Container from \"../components/Container/Container\";\r\nimport Filter from \"../components/Filter/Filter\";\r\nimport { useState } from \"react\";\r\nimport { useGetContactsQuery } from \"../redux/contact/api\";\r\n\r\nfunction ContactsView() {\r\n  const { data } = useGetContactsQuery(\"\");\r\n\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const changeFilter = (e) => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const contactFilter = () => {\r\n    return data.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.trim().toLowerCase())\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {data && <ContactForm contacts={data} />}\r\n      <Filter value={filter} onChange={changeFilter} />\r\n      {data && <ContactList contacts={contactFilter()} />}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ContactsView;"],"sourceRoot":""}