{"version":3,"sources":["views/LoginPageView.js"],"names":["LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","props","useSpring","from","opacity","transform","to","delay","style","overflow","div","component","sx","m","noValidate","onSubmit","e","preventDefault","authOperations","logIn","alert","autoComplete","variant","type","value","onChange","event","target","pattern","title","required","size"],"mappings":"8RAWe,SAASA,IACtB,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAGMC,EAAQC,oBAAU,CACtBC,KAAM,CACJC,QAAS,EACTC,UAAW,0BAEbC,GAAI,CAAEF,QAAS,GAAKC,UAAW,sBAC/BE,MAAO,KAmBT,OACE,qBAAKC,MAAO,CAAEC,SAAU,UAAxB,SACE,cAAC,WAASC,IAAV,CAAcF,MAAOP,EAArB,SACE,eAAC,IAAD,CACEU,UAAU,OACVC,GAAI,CACF,kBAAmB,CAAEC,EAAG,IAE1BC,YAAU,EACVC,SAlBa,SAACC,GAEpB,OADAA,EAAEC,iBACGpB,EACAE,GAELL,EAASwB,IAAeC,MAAM,CAAEtB,QAAOE,cACvCD,EAAS,SACTE,EAAY,KAJUoB,MAAM,0BADTA,MAAM,wBAiBnBC,aAAa,MAPf,UASE,eAAC,IAAD,CAAaC,QAAQ,SAArB,UACE,cAAC,IAAD,oBACA,cAAC,IAAD,CACEC,KAAK,QACLC,MAAO3B,EACP4B,SAjCc,SAACC,GACzB5B,EAAS4B,EAAMC,OAAOH,QAiCZI,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,eAAC,IAAD,CAAaR,QAAQ,WAArB,UACE,cAAC,IAAD,uBACA,cAAC,IAAD,CACEC,KAAK,WACLC,MAAOzB,EACP0B,SAzCiB,SAACC,GAC5B1B,EAAY0B,EAAMC,OAAOH,aA2CnB,cAAC,IAAD,CAAQF,QAAQ,YAAYC,KAAK,SAASQ,KAAK,SAA/C","file":"static/js/7.8444fca2.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authOperations } from \"../redux/auth\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Input from \"@mui/material/Input\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n\r\n  const props = useSpring({\r\n    from: {\r\n      opacity: 0,\r\n      transform: \"translate(-1000px,0px)\",\r\n    },\r\n    to: { opacity: 0.8, transform: \"translate(0px,0px)\" },\r\n    delay: 50,\r\n  });\r\n\r\n  const handleChangeEmail = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n  const handleChangePassword = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!email) return alert(\"Please input email.\");\r\n    if (!password) return alert(\"Please input password.\");\r\n\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <div style={{ overflow: \"hidden\" }}>\r\n      <animated.div style={props}>\r\n        <Box\r\n          component=\"form\"\r\n          sx={{\r\n            \"& > :not(style)\": { m: 5 },\r\n          }}\r\n          noValidate\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel>Email</InputLabel>\r\n            <Input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={handleChangeEmail}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </FormControl>\r\n          <FormControl variant=\"standard\">\r\n            <InputLabel>Password</InputLabel>\r\n            <Input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handleChangePassword}\r\n            />\r\n          </FormControl>\r\n          <Button variant=\"contained\" type=\"submit\" size=\"medium\">\r\n            Log in\r\n          </Button>\r\n        </Box>\r\n      </animated.div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}